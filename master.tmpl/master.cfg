# -*- python -*-
# ex: set filetype=python:

import os
import yaml

from buildbot.plugins import *  # noqa
from buildbot.status import html
from buildbot.status.web import authz, auth


dirname = os.path.dirname(__file__)

with open(os.path.join(dirname, 'workers.yaml')) as file:
    workers = yaml.load(file)

with open(os.path.join(dirname, 'build-matrix.yaml')) as file:
    build_matrix = yaml.load(file)


c = BuildmasterConfig = {
    # We'll need secure communitation with the workers.
    'protocols': {'pb': {'port': 9989}}
}

c['slaves'] = [buildslave.BuildSlave(w['login'], w['password'])
               for w in workers]

c['change_source'] = [
    changes.GitPoller(
        p['repo'],
        branch=p['branch'],
        project=p['name'],
        pollinterval=300
    )
    for p in build_matrix
]

c['schedulers'] = [
    schedulers.SingleBranchScheduler(
        name='{name}.{branch}'.format(**p),
        change_filter=util.ChangeFilter(
            project=p['name'],
            branch=p['branch']
        ),
        treeStableTimer=None,
        builderNames=[
            '{p[name]}.{p[branch]}.{t[name]}'.format(p=p, t=t)
            for t in p['tasks']
        ]
    )
    for p in build_matrix
] + [
    schedulers.ForceScheduler(
        name='force',
        builderNames=[
            '{p[name]}.{p[branch]}.{t[name]}'.format(p=p, t=t)
            for p in build_matrix
            for t in p['tasks']
        ]
    )
]

c['builders'] = [
    util.BuilderConfig(
        name='{p[name]}.{p[branch]}.{t[name]}'.format(p=p, t=t),
        slavenames=['worker1', 'worker2', 'worker3'],
        factory=util.BuildFactory([
            steps.Git(
                repourl=p['repo'],
                branch=p['branch'],
                mode='incremental'
            ),
            steps.ShellCommand(command=t['command'])
        ])
    )
    for p in build_matrix
    for t in p['tasks']
]

c['status'] = []

authz_cfg = authz.Authz(
    # change any of these to True to enable; see the manual for more
    # options
    auth=auth.BasicAuth([('root', 'toor')]),
    gracefulShutdown=False,
    forceBuild='auth',  # use this to test your slave once it is set up
    forceAllBuilds='auth',  # ..or this
    pingBuilder=False,
    stopBuild=False,
    stopAllBuilds=False,
    cancelPendingBuild=False,
)
c['status'].append(html.WebStatus(http_port=8010, authz=authz_cfg))

c['title'] = 'Adblock Plus'
c['titleURL'] = 'https://adblockplus.org/'

# the 'buildbotURL' string should point to the location where the buildbot's
# internal web server is visible. This typically uses the port number set in
# the 'www' entry below, but with an externally-visible host name which the
# buildbot cannot figure out without some help.

c['buildbotURL'] = 'http://localhost:8010/'

c['db'] = {
    'db_url': 'sqlite:///state.sqlite',
}
